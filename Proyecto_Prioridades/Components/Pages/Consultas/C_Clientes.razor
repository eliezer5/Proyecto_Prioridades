@page "/ConsultaCliente"
@rendermode InteractiveServer
@inject ClientesService clienteBLL
<div class="container">
    <div class="card shadow-lg">
        <div class="card-header d-flex justify-content-between align-items-end">
            <h3>Consulta Clientes</h3>
            <a href="" class="btn btn-outline-primary bi bi-house-door-fill">Inicio</a>
        </div>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">ClienteID</th>
                    <th scope="col">Nombre</th>
                    <th scope="col">Telefono</th>
                    <th scope="col">Celular</th>
                    <th scope="col">Email</th>
                    <th scope="col">RNC</th>
                    <th scope="col">Direccion</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                    @foreach(var cliente in clientes)
                    {
                        <tr>
                            <td scope="row">@cliente.ClienteID</td>
                            <td scope="row">@cliente.Nombres</td>
                            <td scope="row">@cliente.Telefono</td>
                            <td scope="row">@cliente.Celular</td>
                            <td scope="row">@cliente.Email</td>
                            <td scope="row">@cliente.Rnc</td>
                            <td scope="row">@cliente.Direccion</td>

                        <td>
                            <a href="cliente/Editar/@cliente.ClienteID" class="btn btn-outline-info bi-pencil-square"></a>
                            <a href="cliente/Eliminar/@cliente.ClienteID" class="btn btn-outline-danger bi bi-trash-fill"></a>
                            <a href="cliente/Detalles/@cliente.ClienteID " class=" btn btn-outline-dark bi bi-info-square"></a>
                        </td>
                        </tr>
                    }
            </tbody>
        </table>
    </div>
</div>

@code {
    public List<Clientes> clientes { get; set; } = new List<Clientes>();

    protected override async Task OnInitializedAsync()
    {
        Expression<Func<Clientes, bool>> criterio = c => c.ClienteID >= 1;
        clientes = await clienteBLL.GetClientes(criterio);
    }
}
